---

import TopicsDropdown from './TopicsDropdown.jsx';

import { getHomePermalink } from '~/utils/permalinks';

interface Link {
  text?: string;
  href?: string;
  ariaLabel?: string;
  icon?: string;
}

interface ActionLink extends Link {
  type?: string;
}

interface MenuLink extends Link {
  links?: Array<Link>;
}

interface TopicLink extends Link {
  icon: string;
  sublinks?: Array<Link>;
}

export interface Props {
  links?: Array<MenuLink>;
  actions?: Array<ActionLink>;
  isSticky?: boolean;
  showToggleTheme?: boolean;
  showRssFeed?: boolean;
  position?: string;
  topics?: Array<TopicLink>;
}

// Definición de enlaces de navegación principal
const mainLinks = [
  { text: 'AUTOR', href: '/perfilautor' },
  { text: 'LIBROS', href: '/category/libro' },
  { text: 'RECOMENDADOS', href: '/blog' },
];



---

<header class="w-full fixed top-0 left-0 z-50" id="header">
  <!-- Menú principal con fondo verde oliva -->
  <div class="bg-[#606c38] text-white py-4 px-6 flex items-center justify-center">
    <div class="w-[90%] md:w-[80%] flex flex-wrap justify-between items-center">
      <!-- Logo -->
      <div class="flex-1">
        <a class="flex items-center" href={getHomePermalink()}>
          <span class="text-xl font-bold tracking-wider"> SISTEMASAUTOORGANIZADOS.COM</span>
        </a>
      </div>
      
      <!-- Menú principal desktop -->
      <div class="hidden md:flex items-center space-x-6">
        {mainLinks.map(({ text, href }) => (
          <a 
            class="font-medium hover:text-gray-200 transition duration-150 ease-in-out"
            href={href}
          >
            {text}
          </a>
        ))}
      </div>
      
      <!-- Menú Hamburguesa para móvil -->
      <div class="flex items-center md:hidden">
        <button class="text-white" aria-label="Toggle menu" id="toggle-mobile-menu">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
          </svg>
        </button>
      </div>
    </div>
  </div>

  <!-- Menú móvil desplegable -->
  <div class="md:hidden bg-[#606c38] border-t border-[#4a5a2a] hidden" id="mobile-menu">
    <div class="px-6 py-4 space-y-3">
      {mainLinks.map(({ text, href }) => (
        <a 
          class="block text-white font-medium hover:text-gray-200 transition duration-150 ease-in-out py-2"
          href={href}
        >
          {text}
        </a>
      ))}
    </div>
  </div>
  
  <!-- Sección de Temas Relacionados con Dropdown JSX -->
  <TopicsDropdown client:load />
  
</header>

<script>
  // Esperar a que el DOM esté completamente cargado
  document.addEventListener('DOMContentLoaded', () => {
    // Obtener referencias a los elementos del menú móvil
    const toggleButton = document.getElementById('toggle-mobile-menu')
    const mobileMenu = document.getElementById('mobile-menu')
    if (toggleButton && mobileMenu) {
      toggleButton.addEventListener('click', () => {
        mobileMenu.classList.toggle('hidden')
      })
    }
  })
</script>
